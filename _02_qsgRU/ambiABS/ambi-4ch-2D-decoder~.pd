#N canvas 730 36 680 664 10;
#X declare -lib iem_ambi -lib iemmatrix;
#X text 66 22 AMBISONIC 4-Channel \, 2D DECODER;
#X obj 473 29 import iem_ambi iemmatrix;
#X obj 35 125 loadbang;
#X obj 35 171 t b b b;
#X obj 53 147 bng 15 250 50 0 empty empty empty 17 7 0 10 -258699 -1
-1;
#X text 76 146 <- recalculate;
#X obj 79 233 list prepend real_ls;
#X obj 79 255 list trim;
#X obj 79 355 ambi_decode3 1 2 4 0;
#X text 89 188 loudspeaker setup:;
#X text 286 178 <real_ls> re_ls_index + phi .. 2-dimensional;
#X text 286 192 <real_ls> re_ls_index + theta + phi .. 3-dimensional
;
#X text 415 236 -45;
#X text 339 236 45;
#X text 413 282 -135;
#X text 335 282 135;
#X text 325 216 example (2D):;
#X msg 57 282 begin_pseudo_inverse;
#X msg 35 311 end_pseudo_inverse;
#X text 233 354 Ambisonic Dekoder:;
#X text 379 356 arg1: ambisonic order;
#X text 379 370 arg2: 2D or 3D;
#X text 379 384 arg3: nr of (real) loudspeakers;
#X text 379 398 arg4: nr of phantom loudspeakers;
#X obj 79 525 mtx_mul~ 4 3 0;
#X obj 102 461 inlet~ W;
#X obj 164 461 inlet~ X;
#X obj 226 461 inlet~ Y;
#X obj 80 587 outlet~ ch1;
#X obj 164 587 outlet~ ch2;
#X obj 249 587 outlet~ ch3;
#X obj 333 587 outlet~ ch4;
#X text 195 524 matrix multiplication;
#X text 97 438 2D \, B-Format (1.Order) Input:;
#X text 189 622 4 Channel Output;
#X text 22 56 This is a decoder for first order 2D ambisonic \, with
4 loudspeaker output.;
#X msg 219 142 1 -45 \, 2 45 \, 3 -135 \, 4 135;
#X msg 79 210 1 -45 \, 2 45 \, 3 -135 \, 4 135;
#X connect 2 0 3 0;
#X connect 3 0 18 0;
#X connect 3 1 17 0;
#X connect 3 2 37 0;
#X connect 4 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 24 0;
#X connect 17 0 8 0;
#X connect 18 0 8 0;
#X connect 24 0 28 0;
#X connect 24 1 29 0;
#X connect 24 2 30 0;
#X connect 24 3 31 0;
#X connect 25 0 24 1;
#X connect 26 0 24 2;
#X connect 27 0 24 3;
#X connect 37 0 6 0;
